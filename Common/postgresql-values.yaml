architecture: replication

global:
  postgresql:
    auth:
      existingSecret: postgresql
      database: postgres

metrics:
  enabled: true
  pgStatStatements: true
  service:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9187"
      prometheus.io/path: "/metrics"

primary:
  extendedConfiguration: |
    max_connections = 3001
    shared_preload_libraries = 'pg_stat_statements'
    pg_stat_statements.track = all
    log_destination = 'stderr'
    logging_collector = on
    log_directory = '/bitnami/postgresql/logs'
    log_filename = 'postgresql.log'
    log_truncate_on_rotation = off
    log_rotation_age = 0
    log_min_duration_statement = 1000
    log_statement = 'all'
  persistence:
    size: 2Gi
  resourcesPreset: medium

readReplicas:
  replicaCount: 1
  extendedConfiguration: |
    max_connections = 3001
    shared_preload_libraries = 'pg_stat_statements'
    pg_stat_statements.track = all
    log_destination = 'stderr'
    logging_collector = on
    log_directory = '/bitnami/postgresql/logs'
    log_filename = 'postgresql.log'
    log_truncate_on_rotation = off
    log_rotation_age = 0
    log_min_duration_statement = 1000
    log_statement = 'all'
  persistence:
    size: 2Gi
  resourcesPreset: medium

replication:
  enabled: true
  numSynchronousReplicas: 1
  synchronousCommit: "on"
