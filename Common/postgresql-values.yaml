architecture: replication

global:
  postgresql:
    auth:
      existingSecret: postgresql
      database: postgres

metrics:
  enabled: true
  pgStatStatements: true
  service:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9187"
      prometheus.io/path: "/metrics"

primary:
  extendedConfiguration: |
    max_connections = 3001
    shared_preload_libraries = 'pg_stat_statements'
    pg_stat_statements.track = all

    # Logging
    log_destination = 'stderr'
    logging_collector = on
    log_directory = '/bitnami/postgresql/logs'
    log_filename = 'postgresql.log'
    log_truncate_on_rotation = off
    log_rotation_age = 0
    log_min_duration_statement = 1000
    log_statement = 'all'

  persistence:
    size: 2Gi
  resourcesPreset: medium
  extraVolumes:
    - name: otel-config
      configMap:
        name: otel-postgres-config
    - name: postgresql-logs
      emptyDir: {}    # writable temporary volume for logs
  extraVolumeMounts:
    - name: otel-config
      mountPath: /etc/otel/config
      readOnly: true
    - name: postgresql-logs
      mountPath: /bitnami/postgresql/logs
      readOnly: false
  sidecars:
    - name: otel-collector
      image: otel/opentelemetry-collector-contrib:0.88.0
      args:
        - "--config"
        - "/etc/otel/config/postgres-metrics-collection-config.yaml"
        - "--config"
        - "/etc/otel/config/postgres-logs-collection-config.yaml"
      envFrom:
        - secretRef:
            name: postgres-env-secret
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 500m
          memory: 512Mi
      volumeMounts:
        - name: otel-config
          mountPath: /etc/otel/config
          readOnly: true
        - name: postgresql-logs
          mountPath: /bitnami/postgresql/logs
          readOnly: false

readReplicas:
  replicaCount: 1
  extendedConfiguration: |
    max_connections = 3001
    shared_preload_libraries = 'pg_stat_statements'
    pg_stat_statements.track = all

    # Logging
    log_destination = 'stderr'
    logging_collector = on
    log_directory = '/bitnami/postgresql/logs'
    log_filename = 'postgresql.log'
    log_truncate_on_rotation = off
    log_rotation_age = 0
    log_min_duration_statement = 1000
    log_statement = 'all'

  persistence:
    size: 2Gi
  resourcesPreset: medium
  extraVolumes:
    - name: otel-config
      configMap:
        name: otel-postgres-config
    - name: postgresql-logs
      emptyDir: {}
  extraVolumeMounts:
    - name: otel-config
      mountPath: /etc/otel/config
      readOnly: true
    - name: postgresql-logs
      mountPath: /bitnami/postgresql/logs
      readOnly: false
  sidecars:
    - name: otel-collector
      image: otel/opentelemetry-collector-contrib:0.88.0
      args:
        - "--config"
        - "/etc/otel/config/postgres-metrics-collection-config.yaml"
        - "--config"
        - "/etc/otel/config/postgres-logs-collection-config.yaml"
      envFrom:
        - secretRef:
            name: postgres-env-secret
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 500m
          memory: 512Mi
      volumeMounts:
        - name: otel-config
          mountPath: /etc/otel/config
          readOnly: true
        - name: postgresql-logs
          mountPath: /bitnami/postgresql/logs
          readOnly: false

replication:
  enabled: true
  numSynchronousReplicas: 1
  synchronousCommit: "on"
