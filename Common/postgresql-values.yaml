architecture: replication

global:
  postgresql:
    auth:
      existingSecret: postgresql
      database: postgres

metrics:
  enabled: true
  pgStatStatements: true

primary:
  extendedConfiguration: |
    # Connection settings
    max_connections = 3001
    shared_preload_libraries = 'pg_stat_statements'
    pg_stat_statements.track = all

    # Logging to stdout (for Promtail to pick up)
    log_destination = 'stderr'
    logging_collector = off
    log_connections = off
    log_disconnections = off
    log_min_duration_statement = 1000
    log_statement = 'all'

  persistence:
    size: 2Gi
    storageClass: local-storage

  resourcesPreset: medium

readReplicas:
  replicaCount: 1

  extendedConfiguration: |
    # Connection settings
    max_connections = 3001
    shared_preload_libraries = 'pg_stat_statements'
    pg_stat_statements.track = all

    # Logging to stdout (for Promtail to pick up)
    log_destination = 'stderr'
    logging_collector = off
    log_connections = off
    log_disconnections = off
    log_min_duration_statement = 1000
    log_statement = 'all'

  persistence:
    size: 2Gi
    storageClass: local-storage

  resourcesPreset: medium

replication:
  enabled: true
  numSynchronousReplicas: 1
  synchronousCommit: "on"
