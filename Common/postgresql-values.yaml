architecture: replication

global:
  postgresql:
    auth:
      existingSecret: postgresql
      database: postgres

metrics:
  enabled: true
  pgStatStatements: true

primary:
  extraVolumes:
    - name: log-volume
      emptyDir: {} # or replace with persistentVolumeClaim for logs retention

  extendedConfiguration: |
    max_connections = 3001
    shared_preload_libraries = 'pg_stat_statements'
    pg_stat_statements.track = all

    # Logging
    log_destination = 'stderr'
    logging_collector = on
    log_directory = '/bitnami/postgresql/logs'
    log_filename = 'postgresql-%Y-%m-%d.log'
    log_truncate_on_rotation = off
    log_rotation_age = 1d
    log_rotation_size = 0
    log_line_prefix = '%m [%p] %q%u@%d %r %a '
    log_error_verbosity = default
    log_min_duration_statement = 1000
    log_statement = 'all'
    log_checkpoints = on
    log_lock_waits = on
    deadlock_timeout = '2s'
    track_io_timing = on
    log_autovacuum_min_duration = 1000
    temp_file_limit = '2GB'

  persistence:
    size: 2Gi

  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi

  extraVolumeMounts:
    - name: log-volume
      mountPath: /bitnami/postgresql/logs

  sidecars:
    - name: log-cleaner
      image: busybox:latest
      command:
        - /bin/sh
        - -c
        - |
          while true; do
            echo "Cleaning old logs for primary..."
            find /bitnami/postgresql/logs -name "*.log" -mtime +3 -exec rm {} \;
            sleep 3600
          done
      volumeMounts:
        - name: log-volume
          mountPath: /bitnami/postgresql/logs

  env:
    - name: POSTGRESQL_LOG_FILE
      value: /bitnami/postgresql/logs/postgresql-$(date +%Y-%m-%d).log

readReplicas:
  replicaCount: 1

  extraVolumes:
    - name: log-volume
      emptyDir: {}

  extendedConfiguration: |
    max_connections = 3001
    shared_preload_libraries = 'pg_stat_statements'
    pg_stat_statements.track = all

    # Logging
    log_destination = 'stderr'
    logging_collector = on
    log_directory = '/bitnami/postgresql/logs'
    log_filename = 'postgresql-%Y-%m-%d.log'
    log_truncate_on_rotation = off
    log_rotation_age = 1d
    log_rotation_size = 0
    log_line_prefix = '%m [%p] %q%u@%d %r %a '
    log_error_verbosity = default
    log_min_duration_statement = 1000
    log_statement = 'all'
    log_checkpoints = on
    log_lock_waits = on
    deadlock_timeout = '2s'
    track_io_timing = on
    log_autovacuum_min_duration = 1000
    temp_file_limit = '2GB'

  persistence:
    size: 2Gi

  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 400m
      memory: 1Gi

  extraVolumeMounts:
    - name: log-volume
      mountPath: /bitnami/postgresql/logs

  sidecars:
    - name: log-cleaner
      image: busybox:latest
      command:
        - /bin/sh
        - -c
        - |
          while true; do
            echo "Cleaning old logs for replica..."
            find /bitnami/postgresql/logs -name "*.log" -mtime +3 -exec rm {} \;
            sleep 3600
          done
      volumeMounts:
        - name: log-volume
          mountPath: /bitnami/postgresql/logs

  env:
    - name: POSTGRESQL_LOG_FILE
      value: /bitnami/postgresql/logs/postgresql-$(date +%Y-%m-%d).log

replication:
  enabled: true
  numSynchronousReplicas: 1
  synchronousCommit: "on"
