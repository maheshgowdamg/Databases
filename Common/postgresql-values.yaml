architecture: replication
global:
  postgresql:
    auth:
      existingSecret: postgresql
      database: postgres
metrics:
  enabled: true
  pgStatStatements: true
primary:
  extendedConfiguration: |
    max_connections = 3001
    shared_preload_libraries = 'pg_stat_statements'
    pg_stat_statements.track = all
    # Logging settings
    log_destination = 'stderr'
    logging_collector = on
    log_directory = '/bitnami/postgresql/logs'
    log_filename = 'postgresql-%Y-%m-%d.log'  # Daily unique file
    log_truncate_on_rotation = off  # Append if same name (but name changes daily)
    log_rotation_age = 0  # Disable extra time rotation (filename handles it)
    log_connections = off
    log_disconnections = off
    log_min_duration_statement = 1000
    log_statement = 'all'
  persistence:
    size: 2Gi
  resourcesPreset: medium
  sidecars:
  - name: log-cleaner
    image: busybox:1.36
    command:
    - /bin/sh
    - -c
    - |
      while true; do
        find /logs -type f -name 'postgresql-*.log' -mtime +3 -delete;
        sleep 3600;
      done
    volumeMounts:
    - name: data
      mountPath: /logs
      subPath: logs
    resources:
      limits:
        cpu: 50m
        memory: 64Mi
      requests:
        cpu: 10m
        memory: 32Mi
readReplicas:
  replicaCount: 1
  extendedConfiguration: |
    max_connections = 3001
    shared_preload_libraries = 'pg_stat_statements'
    pg_stat_statements.track = all
    # Logging settings
    log_destination = 'stderr'
    logging_collector = on
    log_directory = '/bitnami/postgresql/logs'
    log_filename = 'postgresql-%Y-%m-%d.log'  # Daily unique file
    log_truncate_on_rotation = off  # Append if same name (but name changes daily)
    log_rotation_age = 0  # Disable extra time rotation (filename handles it)
    log_disconnections = off
    log_min_duration_statement = 1000
    log_statement = 'all'
  persistence:
    size: 2Gi
  resourcesPreset: medium
  sidecars:
  - name: log-cleaner
    image: busybox:1.36
    command:
    - /bin/sh
    - -c
    - |
      while true; do
        find /logs -type f -name 'postgresql-*.log' -mtime +3 -delete;
        sleep 3600;
      done
    volumeMounts:
    - name: data
      mountPath: /logs
      subPath: logs
    resources:
      limits:
        cpu: 50m
        memory: 64Mi
      requests:
        cpu: 10m
        memory: 32Mi
replication:
  enabled: true
  numSynchronousReplicas: 1
  synchronousCommit: "on"
